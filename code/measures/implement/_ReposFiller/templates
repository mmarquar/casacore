1000 aips/Arrays/Array.cc 
     = aips/Measures/MDirection.h 
     template class Array<MDirection> 
     #ifdef AIPS_SUN_NATIVE 
       template class Array<MDirection>::ConstIteratorSTL 
     #endif 
1010 aips/Arrays/Array.cc 
     = aips/Measures/MFrequency.h 
     template class Array<MFrequency> 
     #ifdef AIPS_SUN_NATIVE 
       template class Array<MFrequency>::ConstIteratorSTL 
     #endif 
1020 aips/Arrays/Array.cc 
     = aips/Measures/MPosition.h 
     template class Array<MPosition> 
     #ifdef AIPS_SUN_NATIVE 
       template class Array<MPosition>::ConstIteratorSTL 
     #endif 
1030 aips/Arrays/Array.cc 
     = aips/Measures/MeasureHolder.h 
     template class Array<MeasureHolder> 
     #ifdef AIPS_SUN_NATIVE 
       template class Array<MeasureHolder>::ConstIteratorSTL 
     #endif 
1040 aips/Arrays/Array.cc 
     = aips/Measures/Stokes.h 
     template class Array<Stokes::StokesTypes> 
     #ifdef AIPS_SUN_NATIVE 
       template class Array<Stokes::StokesTypes>::ConstIteratorSTL 
     #endif 
1000 aips/Arrays/ArrayLogical.cc aips/Arrays/Array.h 
     = aips/Measures/Stokes.h 
     template Bool allEQ(Array<Stokes::StokesTypes> const &, Array<Stokes::StokesTypes> const &) 
     template Bool anyNE(Array<Stokes::StokesTypes> const &, Array<Stokes::StokesTypes> const &) 
1000 aips/Arrays/MaskedArray.cc 
     = aips/Measures/MDirection.h 
     template class MaskedArray<MDirection> 
1010 aips/Arrays/MaskedArray.cc 
     = aips/Measures/MFrequency.h 
     template class MaskedArray<MFrequency> 
1020 aips/Arrays/MaskedArray.cc 
     = aips/Measures/MPosition.h 
     template class MaskedArray<MPosition> 
1030 aips/Arrays/MaskedArray.cc 
     = aips/Measures/MeasureHolder.h 
     template class MaskedArray<MeasureHolder> 
1040 aips/Arrays/MaskedArray.cc 
     = aips/Measures/Stokes.h 
     template class MaskedArray<Stokes::StokesTypes> 
1000 aips/Arrays/Vector.cc 
     = aips/Measures/MeasureHolder.h 
     template class Vector<MeasureHolder> 
1010 aips/Arrays/Vector.cc 
     = aips/Measures/Stokes.h 
     template class Vector<Stokes::StokesTypes> 
1020 aips/Arrays/Vector.cc aips/Measures/MDirection.h 
     template class Vector<MDirection> 
1030 aips/Arrays/Vector.cc aips/Measures/MFrequency.h 
     template class Vector<MFrequency> 
1040 aips/Arrays/Vector.cc aips/Measures/MPosition.h 
     template class Vector<MPosition> 
1000 aips/Containers/Block.h 
     = aips/Measures/MeasureHolder.h 
     template class Block<MeasureHolder> 
1010 aips/Containers/Block.h aips/Measures/MDirection.h 
     template class Block<MDirection> 
1020 aips/Containers/Block.h aips/Measures/MFrequency.h 
     template class Block<MFrequency> 
1030 aips/Containers/Block.h aips/Measures/MPosition.h 
     template class Block<MPosition> 
1000 aips/Measures/MEpoch.h 
     = aips/Arrays/Array.cc 
     = aips/Arrays/MaskedArray.cc 
     = aips/Arrays/Vector.cc 
     = aips/Containers/Block.h 
     = aips/Utilities/Copy.cc 
     = aips/Utilities/CountedPtr.cc 
     = aips/Utilities/ValTypeId.h 
     template class CountedPtr<Block<MEpoch> > 
     template class CountedConstPtr<Block<MEpoch> > 
     template class PtrRep<Block<MEpoch> > 
     template class SimpleCountedPtr<Block<MEpoch> > 
     template class SimpleCountedConstPtr<Block<MEpoch> > 
     template class Array<MEpoch> 
     template class Vector<MEpoch> 
     template class Block<MEpoch> 
     template class MaskedArray<MEpoch> 
     template void objcopy(MEpoch *, MEpoch const *, uInt) 
     template void objcopy(MEpoch *, MEpoch const *, uInt, uInt, uInt) 
     template void objset(MEpoch *, MEpoch, uInt) 
     template void objset(MEpoch *, MEpoch, uInt, uInt) 
     template void objmove(MEpoch *, MEpoch const *, uInt) 
1000 aips/Measures/MRadialVelocity.h 
     = aips/Arrays/Array.cc 
     = aips/Arrays/MaskedArray.cc 
     = aips/Arrays/Vector.cc 
     = aips/Containers/Block.h 
     = aips/Utilities/Copy.cc 
     = aips/Utilities/CountedPtr.cc 
     = aips/Utilities/ValTypeId.h 
     template class CountedPtr<Block<MRadialVelocity> > 
     template class CountedConstPtr<Block<MRadialVelocity> > 
     template class PtrRep<Block<MRadialVelocity> > 
     template class SimpleCountedPtr<Block<MRadialVelocity> > 
     template class SimpleCountedConstPtr<Block<MRadialVelocity> > 
     template class Array<MRadialVelocity> 
     template class Vector<MRadialVelocity> 
     template class Block<MRadialVelocity> 
     template class MaskedArray<MRadialVelocity> 
     template void objcopy(MRadialVelocity *, MRadialVelocity const *, uInt) 
     template void objcopy(MRadialVelocity *, MRadialVelocity const *, uInt, uInt, uInt) 
     template void objset(MRadialVelocity *, MRadialVelocity, uInt) 
     template void objset(MRadialVelocity *, MRadialVelocity, uInt, uInt) 
     template void objmove(MRadialVelocity *, MRadialVelocity const *, uInt) 
1000 aips/Measures/MeasBase.cc aips/Quanta/MVBaseline.h 
     = aips/Measures/MBaseline.h aips/Measures/MeasRef.h 
     template class MeasBase<MVBaseline, MeasRef<MBaseline> > 
1010 aips/Measures/MeasBase.cc aips/Quanta/MVDirection.h 
     = aips/Measures/MDirection.h aips/Measures/MeasRef.h 
     template class MeasBase<MVDirection, MeasRef<MDirection> > 
1020 aips/Measures/MeasBase.cc aips/Quanta/MVDoppler.h 
     = aips/Measures/MDoppler.h aips/Measures/MeasRef.h 
     template class MeasBase<MVDoppler, MeasRef<MDoppler> > 
1030 aips/Measures/MeasBase.cc aips/Quanta/MVEarthMagnetic.h 
     = aips/Measures/MEarthMagnetic.h aips/Measures/MeasRef.h 
     template class MeasBase<MVEarthMagnetic, MeasRef<MEarthMagnetic> > 
1040 aips/Measures/MeasBase.cc aips/Quanta/MVEpoch.h 
     = aips/Measures/MEpoch.h aips/Measures/MeasRef.h 
     template class MeasBase<MVEpoch, MeasRef<MEpoch> > 
1050 aips/Measures/MeasBase.cc aips/Quanta/MVFrequency.h 
     = aips/Measures/MFrequency.h aips/Measures/MeasRef.h 
     template class MeasBase<MVFrequency, MeasRef<MFrequency> > 
1060 aips/Measures/MeasBase.cc aips/Quanta/MVPosition.h 
     = aips/Measures/MPosition.h aips/Measures/MeasRef.h 
     template class MeasBase<MVPosition, MeasRef<MPosition> > 
1070 aips/Measures/MeasBase.cc aips/Quanta/MVRadialVelocity.h 
     = aips/Measures/MRadialVelocity.h aips/Measures/MeasRef.h 
     template class MeasBase<MVRadialVelocity, MeasRef<MRadialVelocity> > 
1080 aips/Measures/MeasBase.cc aips/Quanta/MVuvw.h 
     = aips/Measures/Muvw.h aips/Measures/MeasRef.h 
     template class MeasBase<MVuvw, MeasRef<Muvw> > 
1000 aips/Measures/MeasConvert.cc aips/Measures/MBaseline.h 
     = aips/Quanta/MVBaseline.h aips/Measures/MCBaseline.h 
     template class MeasConvert<MBaseline> 
1010 aips/Measures/MeasConvert.cc aips/Measures/MDirection.h 
     = aips/Quanta/MVDirection.h aips/Measures/MCDirection.h 
     template class MeasConvert<MDirection> 
1020 aips/Measures/MeasConvert.cc aips/Measures/MDoppler.h 
     = aips/Quanta/MVDoppler.h aips/Measures/MCDoppler.h 
     template class MeasConvert<MDoppler> 
1030 aips/Measures/MeasConvert.cc aips/Measures/MEarthMagnetic.h 
     = aips/Quanta/MVEarthMagnetic.h aips/Measures/MCEarthMagnetic.h 
     template class MeasConvert<MEarthMagnetic> 
1040 aips/Measures/MeasConvert.cc aips/Measures/MEpoch.h 
     = aips/Quanta/MVEpoch.h aips/Measures/MCEpoch.h 
     template class MeasConvert<MEpoch> 
1050 aips/Measures/MeasConvert.cc aips/Measures/MFrequency.h 
     = aips/Quanta/MVFrequency.h aips/Measures/MCFrequency.h 
     template class MeasConvert<MFrequency> 
1060 aips/Measures/MeasConvert.cc aips/Measures/MPosition.h 
     = aips/Quanta/MVPosition.h aips/Measures/MCPosition.h 
     template class MeasConvert<MPosition> 
1070 aips/Measures/MeasConvert.cc aips/Measures/MRadialVelocity.h 
     = aips/Quanta/MVRadialVelocity.h aips/Measures/MCRadialVelocity.h 
     template class MeasConvert<MRadialVelocity> 
1080 aips/Measures/MeasConvert.cc aips/Measures/Muvw.h 
     = aips/Quanta/MVuvw.h aips/Measures/MCuvw.h 
     template class MeasConvert<Muvw> 
1000 aips/Measures/MeasRef.cc aips/Measures/MBaseline.h 
     template class MeasRef<MBaseline> 
1010 aips/Measures/MeasRef.cc aips/Measures/MDirection.h 
     template class MeasRef<MDirection> 
1020 aips/Measures/MeasRef.cc aips/Measures/MDoppler.h 
     template class MeasRef<MDoppler> 
1030 aips/Measures/MeasRef.cc aips/Measures/MEarthMagnetic.h 
     template class MeasRef<MEarthMagnetic> 
1040 aips/Measures/MeasRef.cc aips/Measures/MEpoch.h 
     template class MeasRef<MEpoch> 
1050 aips/Measures/MeasRef.cc aips/Measures/MFrequency.h 
     template class MeasRef<MFrequency> 
1060 aips/Measures/MeasRef.cc aips/Measures/MPosition.h 
     template class MeasRef<MPosition> 
1070 aips/Measures/MeasRef.cc aips/Measures/MRadialVelocity.h 
     template class MeasRef<MRadialVelocity> 
1080 aips/Measures/MeasRef.cc aips/Measures/Muvw.h 
     template class MeasRef<Muvw> 
1000 aips/Measures/Muvw.h 
     = aips/Arrays/Array.cc 
     = aips/Arrays/MaskedArray.cc 
     = aips/Arrays/Vector.cc 
     = aips/Containers/Block.h 
     = aips/Utilities/Copy.cc 
     = aips/Utilities/CountedPtr.cc 
     = aips/Utilities/ValTypeId.h 
     template class CountedPtr<Block<Muvw> > 
     template class CountedConstPtr<Block<Muvw> > 
     template class PtrRep<Block<Muvw> > 
     template class SimpleCountedPtr<Block<Muvw> > 
     template class SimpleCountedConstPtr<Block<Muvw> > 
     template class Array<Muvw> 
     template class Vector<Muvw> 
     template class Block<Muvw> 
     template class MaskedArray<Muvw> 
     template void objcopy(Muvw *, Muvw const *, uInt) 
     template void objcopy(Muvw *, Muvw const *, uInt, uInt, uInt) 
     template void objset(Muvw *, Muvw, uInt) 
     template void objset(Muvw *, Muvw, uInt, uInt) 
     template void objmove(Muvw *, Muvw const *, uInt) 
1000 aips/TableMeasures/ArrayMeasColumn.cc 
     = aips/Measures/MDirection.h 
     = aips/Measures/MEpoch.h 
     = aips/Measures/MFrequency.h 
     = aips/Measures/MPosition.h 
     = aips/Measures/Muvw.h 
     = aips/Measures/MRadialVelocity.h 
     template class ROArrayMeasColumn<MDirection> 
     template class ArrayMeasColumn<MDirection> 
     template class ROArrayMeasColumn<MEpoch> 
     template class ArrayMeasColumn<MEpoch> 
     template class ROArrayMeasColumn<MFrequency> 
     template class ArrayMeasColumn<MFrequency> 
     template class ROArrayMeasColumn<MPosition> 
     template class ArrayMeasColumn<MPosition> 
     template class ROArrayMeasColumn<Muvw> 
     template class ArrayMeasColumn<Muvw> 
     template class ROArrayMeasColumn<MRadialVelocity> 
     template class ArrayMeasColumn<MRadialVelocity> 
1000 aips/TableMeasures/ArrayQuantColumn.cc 
     template class ROArrayQuantColumn<Double> 
     template class ArrayQuantColumn<Double> 
     template class ROArrayQuantColumn<Float> 
     template class ArrayQuantColumn<Float> 
1000 aips/TableMeasures/ScalarMeasColumn.cc 
     = aips/Measures/MDirection.h 
     = aips/Measures/MDoppler.h 
     = aips/Measures/MEpoch.h 
     = aips/Measures/MFrequency.h 
     = aips/Measures/MPosition.h 
     = aips/Measures/MRadialVelocity.h 
     = aips/Measures/Muvw.h 
     template class ROScalarMeasColumn<MDirection> 
     template class ScalarMeasColumn<MDirection> 
     template class ROScalarMeasColumn<MDoppler> 
     template class ScalarMeasColumn<MDoppler> 
     template class ROScalarMeasColumn<MEpoch> 
     template class ScalarMeasColumn<MEpoch> 
     template class ROScalarMeasColumn<MFrequency> 
     template class ScalarMeasColumn<MFrequency> 
     template class ROScalarMeasColumn<MPosition> 
     template class ScalarMeasColumn<MPosition> 
     template class ROScalarMeasColumn<MRadialVelocity> 
     template class ScalarMeasColumn<MRadialVelocity> 
     template class ROScalarMeasColumn<Muvw> 
     template class ScalarMeasColumn<Muvw> 
1000 aips/TableMeasures/ScalarQuantColumn.cc 
     template class ROScalarQuantColumn<Double> 
     template class ROScalarQuantColumn<Float> 
     template class ScalarQuantColumn<Double> 
     template class ScalarQuantColumn<Float> 
1000 aips/TableMeasures/TableMeasDesc.cc 
     = aips/Measures/MBaseline.h 
     = aips/Measures/MDirection.h 
     = aips/Measures/MDoppler.h 
     = aips/Measures/MEarthMagnetic.h 
     = aips/Measures/MEpoch.h 
     = aips/Measures/MFrequency.h 
     = aips/Measures/MPosition.h 
     = aips/Measures/MRadialVelocity.h 
     = aips/Measures/Muvw.h 
     template class TableMeasDesc<MBaseline> 
     template class TableMeasDesc<MDirection> 
     template class TableMeasDesc<MDoppler> 
     template class TableMeasDesc<MEarthMagnetic> 
     template class TableMeasDesc<MEpoch> 
     template class TableMeasDesc<MFrequency> 
     template class TableMeasDesc<MPosition> 
     template class TableMeasDesc<MRadialVelocity> 
     template class TableMeasDesc<Muvw> 
1000 aips/Utilities/Copy.cc 
     = aips/Measures/MDirection.h 
     template void objcopy(MDirection *, MDirection const *, uInt) 
     template void objcopy(MDirection *, MDirection const *, uInt, uInt, uInt) 
     template void objset(MDirection *, MDirection, uInt) 
     template void objset(MDirection *, MDirection, uInt, uInt) 
     template void objmove(MDirection *, MDirection const *, uInt) 
1010 aips/Utilities/Copy.cc 
     = aips/Measures/MFrequency.h 
     template void objcopy(MFrequency *, MFrequency const *, uInt) 
     template void objcopy(MFrequency *, MFrequency const *, uInt, uInt, uInt) 
     template void objset(MFrequency *, MFrequency, uInt) 
     template void objset(MFrequency *, MFrequency, uInt, uInt) 
     template void objmove(MFrequency *, MFrequency const *, uInt) 
1020 aips/Utilities/Copy.cc 
     = aips/Measures/MFrequency.h 
     template void objcopy(MFrequency::Types *, MFrequency::Types const *, uInt) 
1030 aips/Utilities/Copy.cc 
     = aips/Measures/MPosition.h 
     template void objcopy(MPosition *, MPosition const *, uInt) 
     template void objcopy(MPosition *, MPosition const *, uInt, uInt, uInt) 
     template void objset(MPosition *, MPosition, uInt) 
     template void objset(MPosition *, MPosition, uInt, uInt) 
     template void objmove(MPosition *, MPosition const *, uInt) 
1040 aips/Utilities/Copy.cc 
     = aips/Measures/MeasureHolder.h 
     template void objcopy(MeasureHolder *, MeasureHolder const *, uInt) 
     template void objcopy(MeasureHolder *, MeasureHolder const *, uInt, uInt, uInt) 
     template void objmove(MeasureHolder *, MeasureHolder const *, uInt) 
     template void objset(MeasureHolder *, MeasureHolder, uInt) 
     template void objset(MeasureHolder *, MeasureHolder, uInt, uInt) 
1050 aips/Utilities/Copy.cc 
     = aips/Measures/Stokes.h 
     template void objcopy(Stokes::StokesTypes *, Stokes::StokesTypes const *, uInt) 
     template void objcopy(Stokes::StokesTypes *, Stokes::StokesTypes const *, uInt, uInt, uInt) 
     template void objset(Stokes::StokesTypes *, Stokes::StokesTypes, uInt) 
     template void objset(Stokes::StokesTypes *, Stokes::StokesTypes, uInt, uInt) 
1000 aips/Utilities/CountedPtr.cc 
     = aips/Containers/Block.h 
     = aips/Measures/MeasureHolder.h 
     template class CountedConstPtr<Block<MeasureHolder> > 
     template class CountedPtr<Block<MeasureHolder> > 
     template class PtrRep<Block<MeasureHolder> > 
     template class SimpleCountedConstPtr<Block<MeasureHolder> > 
     template class SimpleCountedPtr<Block<MeasureHolder> > 
1010 aips/Utilities/CountedPtr.cc 
     = aips/Containers/Block.h 
     = aips/Measures/Stokes.h 
     template class CountedPtr<Block<Stokes::StokesTypes> > 
     template class CountedConstPtr<Block<Stokes::StokesTypes> > 
     template class SimpleCountedPtr<Block<Stokes::StokesTypes> > 
     template class SimpleCountedConstPtr<Block<Stokes::StokesTypes> > 
     template class PtrRep<Block<Stokes::StokesTypes> > 
1020 aips/Utilities/CountedPtr.cc aips/Containers/Block.h 
     = aips/Measures/MDirection.h 
     template class CountedConstPtr<Block<MDirection> > 
     template class CountedPtr<Block<MDirection> > 
     template class PtrRep<Block<MDirection> > 
     template class SimpleCountedConstPtr<Block<MDirection> > 
     template class SimpleCountedPtr<Block<MDirection> > 
1030 aips/Utilities/CountedPtr.cc aips/Containers/Block.h 
     = aips/Measures/MFrequency.h 
     template class CountedConstPtr<Block<MFrequency> > 
     template class CountedPtr<Block<MFrequency> > 
     template class PtrRep<Block<MFrequency> > 
     template class SimpleCountedConstPtr<Block<MFrequency> > 
     template class SimpleCountedPtr<Block<MFrequency> > 
1040 aips/Utilities/CountedPtr.cc aips/Containers/Block.h 
     = aips/Measures/MPosition.h 
     template class CountedConstPtr<Block<MPosition> > 
     template class CountedPtr<Block<MPosition> > 
     template class PtrRep<Block<MPosition> > 
     template class SimpleCountedConstPtr<Block<MPosition> > 
     template class SimpleCountedPtr<Block<MPosition> > 
1050 aips/Utilities/CountedPtr.cc aips/TableMeasures/TableMeasDescBase.h 
     template class CountedPtr<TableMeasDescBase> 
     template class CountedConstPtr<TableMeasDescBase> 
     template class PtrRep<TableMeasDescBase> 
     template class SimpleCountedPtr<TableMeasDescBase> 
     template class SimpleCountedConstPtr<TableMeasDescBase> 
     # This seems to be the only way at present to find out if we are using egcs.
     # This test might break eventually.
     # This comment is needed to get the #endif in the .cc file!
1000 aips/Utilities/PtrHolder.cc 
     = aips/Measures/Measure.h 
     template class PtrHolder<Measure> 
1000 aips/Utilities/Register.cc aips/Measures/MBaseline.h 
     template uInt Register(MBaseline const *) 
1010 aips/Utilities/Register.cc aips/Measures/MDirection.h 
     template uInt Register(MDirection const *) 
1020 aips/Utilities/Register.cc aips/Measures/MDoppler.h 
     template uInt Register(MDoppler const *) 
1030 aips/Utilities/Register.cc aips/Measures/MEarthMagnetic.h 
     template uInt Register(MEarthMagnetic const *) 
1040 aips/Utilities/Register.cc aips/Measures/MEpoch.h 
     template uInt Register(MEpoch const *) 
1050 aips/Utilities/Register.cc aips/Measures/MFrequency.h 
     template uInt Register(MFrequency const *) 
1060 aips/Utilities/Register.cc aips/Measures/MPosition.h 
     template uInt Register(MPosition const *) 
1070 aips/Utilities/Register.cc aips/Measures/MRadialVelocity.h 
     template uInt Register(MRadialVelocity const *) 
1080 aips/Utilities/Register.cc aips/Measures/Muvw.h 
     = aips/Quanta/MVuvw.h 
     template uInt Register(Muvw const *) 
     template uInt Register(MVuvw const *) 
