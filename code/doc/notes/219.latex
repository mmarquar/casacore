\documentclass[11pt]{article}
\usepackage{html, epsf}

\begin{document}

\title{NOTE 219 -- AIPS++ Mosaicing development plan}
  

\author{Tim Cornwell}

\date{Draft 1997 April 30}

\maketitle
\begin{htmlonly}
\htmladdnormallink{A postscript version of this note is available (100kB).}{../219.ps}
\end{htmlonly}

\tableofcontents
      
\section{Purpose}

This document describes a phased plan to realize the Mosaicing
specifications as described by Holdaway {\em et al.}
\htmladdnormallink{(AIP++ Specification memo
120)}{../specs/120/120.html}
(hereafter HSCR).

\section{Current status}

{\tt sky} currently (April 1998) provides simple mosaicing
capabilities. Specifically, the program can correct for VLA and WSRT
primary beams in either a linear mosaic or via a clean-based
algorithm.  In the clean-based algorithm, the minor cycles are
performed using an average PSF, and major cycles using the fully
correct PSF (including any time-variation). Both these capabilities
result from an initiative to demonstrate that the synthesis framework
is capable of supporting mosaicing data reduction. 

A significant design decision in {\tt sky} is that all deconvolution
is performed inside {\tt sky}. This is contrary to the model used in
Miriad mosaicing, whereby the dirty image and PSFs are written out and
processed separately in another program. The rationale for the choice
not to do this in {\em sky} is that the ancillary information (arising
from the MeasurementSet) that must be carried along may be quite
complicated (internally the VisibilityIterator class is used to
encapsulate this information).

The calibration object, {\tt cal}, knows nothing about mosaicing: all
prediction of model visibilities is done by {\tt sky}.
Visibility-plane calibration is thus independent of whether or not the
data are mosaiced.

The one key capability yet to be developed fully and demonstrated in the
synthesis framework is the solution for image plane-based effects such
as non-isoplanicity or pointing errors.

\section{Phase I: Improve sky}

To build on the current capabilities of {\tt sky}, we need to do the
following:

\begin{itemize}
\item Improve the PBSkyJones class hierachy to allow the types of
PB models described in HSCR. In this phase, we will only allow
PBs with known form. Solveable primary beams will come later.
\item Optimize the use of FFTs in the Gridded transform (class GridFT)
to avoid FFTing regions outside the primary beam model (need Image
region support).
\item Post-deconvolution primary beam correction, both single field
and multiple field.
\item Provide different deconvolution methods: 
\begin{itemize}
\item inverse and Wiener filtering (including production of
the effective uv coverage {\em i.e.} the FT of the average
PSF).
\item SDI-CLEAN
\item MEM using Cornwell-Evans algorithm (as modified by Sault)
\end{itemize}
\item ComponentModel processing should be optimized.
\end{itemize}

A suitable concluding milestone for this phase would be to able to
make mosaics from a very large spectral-line mosaic dataset from
WSRT. Another milestone would be to correct known assymetries in the
primary beam model {\em e.g.} the VLA primary beam squint when
observing circular polarization on the Sun.

\section{Phase II: Develop Single Dish OTF imaging in sky}

Single Dish On-The-Fly data reduction can be accomplished using the
SkyEquation formalizm but to acheive satisfactory performance when
imaging only OTF data, some changes may be required. In particular,
a different version of SkyEquation::gradientsChiSquared is probably
necessary since a Fourier transform is not required.

MeasurementSet V2 is needed in order to hold OTF data in a 
reasonably compact form.

A concluding milestone would be to construct an OTF image from
12m spectral data.

\section{Phase III: Simulation capability}

Once the changes above have been made, we can move on to develop
a simulation capability using the tools refined in the previous
work. Specifically, the SkyEquation can be used to provide
transforms of models, and the refined PBSkyJones can be used to
implement various primary beams in the mosaicing.

I suggest that the simulator be a separate object, with an interface
similar in spirit to that of {\tt sky} {\em i.e.}  tending towards
atomic, low-level operations rather than high-level operations.

Part of the simulation tools should be devoted towards examining
the three measures of accuracy of reconstruction described
by Cornwell, Holdaway and Uson (1992):

\begin{description}
\item[Dynamic range]: Peak on-source brightness divided by
rms off-source rumble.
\item[Fidelity]: Median of on-source brightness divided by 
error in reconstruction.
\item[Visibility SNR curve]: Radial average of visibility
divided by rms error in reconstruction.
\end{description}

A concluding milestone would be to simulate a simple mosaiced
observation from one of the consortium telescopes, and make an image
using sky, and evaluate the imaging performance.

\section{Phase IV: Mosaicing tools}

There is a need for a number of basic tools for aiding mosaicing.

\begin{itemize}
\item Summary of a mosaic observation, both textual and graphical.
\begin{itemize}
\item Display pointing centers graphically. Possibly overlay with 
{\em e.g.} spectra, or visibility curves.
\item For any given point in an image, display which pointings (field-ids)
are relevant (and with what weight).
\end{itemize}
\item Selection tools, textual and graphical.
\begin{itemize}
\item Based on field-id, {\em etc.}
\item Based on proximity to a given point on the sky
\item Based on data criteria {\em e.g.} peak visibility
\end{itemize}
\item Weighting tools
\end{itemize}

\section{Scheduling}

\end{document}
