1000 aips/Arrays/ArrayLogical.cc aips/BasicSL/Complex.h 
     template Bool allEQ(Array<Complex> const &, Complex const &) 
     template Bool allEQ(Array<DComplex> const &, DComplex const &) 
     template Bool allEQ(Array<Short> const &, Short const &) 
     template Bool allNear(Array<Complex> const &, Array<Complex> const &, Double) 
     template LogicalArray operator<(Array<Double> const &, Double const &) 
1010 aips/Arrays/ArrayLogical.cc aips/BasicSL/Complex.h 
     template LogicalArray operator<(Array<Double> const &, Array<Double> const &) 
     template LogicalArray operator<(Double const &, Array<Double> const &) 
     template LogicalArray operator<=(Array<Double> const &, Array<Double> const &) 
     template LogicalArray operator<=(Double const &, Array<Double> const &) 
     template LogicalArray operator<(Array<DComplex> const &, Array<DComplex> const &) 
     template LogicalArray operator<(Array<DComplex> const &, DComplex const &) 
     template LogicalArray operator<(DComplex const &, Array<DComplex> const &) 
     template LogicalArray operator<=(Array<DComplex> const &, Array<DComplex> const &) 
     template LogicalArray operator<=(Array<DComplex> const &, DComplex const &) 
     template LogicalArray operator<=(DComplex const &, Array<DComplex> const &) 
     template LogicalArray operator<(Array<String> const &, Array<String> const &) 
     template LogicalArray operator<(Array<String> const &, String const &) 
     template LogicalArray operator<(String const &, Array<String> const &) 
     template LogicalArray operator<=(Array<String> const &, Array<String> const &) 
     template LogicalArray operator<=(Array<String> const &, String const &) 
     template LogicalArray operator<=(String const &, Array<String> const &) 
     template Bool allNear(Array<DComplex> const &, Array<DComplex> const &, Double) 
1000 aips/Arrays/ArrayMath.cc aips/BasicSL/Complex.h 
     template void indgen(Array<Complex> &) 
     template void indgen(Array<Complex> &, Complex, Complex) 
     template void operator+=(Array<uChar> &, uChar const &) 
     template Array<String> operator+(Array<String> const &, String const &) 
     template Double stddev(Array<Double> const &, Double) 
     template Array<Float> fmod(Array<Float> const &, Float const &) 
1010 aips/Arrays/ArrayMath.cc aips/BasicSL/Complex.h 
     template void indgen(Array<DComplex> &) 
     template void indgen(Array<DComplex> &, DComplex, DComplex) 
1020 aips/Arrays/ArrayMath.cc aips/BasicSL/Complex.h 
     template void indgen(Array<DComplex> &) 
     template void indgen(Array<DComplex> &, DComplex, DComplex) 
1000 aips/Arrays/Cube.cc 
     template class Cube<uChar> 
1000 aips/Containers/Block.h aips/Tables/ForwardColRow.h 
     template class PtrBlock<ForwardColumnIndexedRow *> 
1000 aips/Containers/BlockIO.cc 
     template ostream & operator<<(ostream &, Block<uInt> const &) 
1000 aips/Containers/RecordField.cc aips/Tables/Table.h 
     = aips/Tables/TableRecord.h 
     template class RORecordFieldPtr<Table> 
     template class RecordFieldPtr<Table> 
1000 aips/Tables/BaseMappedArrayEngine.cc 
     = aips/Tables/ScaledArrayEngine.cc 
     template class BaseMappedArrayEngine<Double, Int> 
     template class BaseMappedArrayEngine<Float, uChar> 
     template class ScaledArrayEngine<Double, Int> 
     template class ScaledArrayEngine<Float, uChar> 
1000 aips/Tables/TabVecLogic.cc aips/Tables/TabVecMath.cc 
     = aips/Tables/TVecLogic.cc aips/Tables/TVecMath.cc 
     template Bool allEQ(ROTableVector<Double> const &, ROTableVector<Double> const &) 
     template Bool allEQ(ROTableVector<Float> const &, ROTableVector<Float> const &) 
     template Bool allEQ(ROTableVector<Int> const &, ROTableVector<Int> const &) 
     template Bool allNE(ROTableVector<Int> const &, ROTableVector<Int> const &) 
     template Bool anyEQ(ROTableVector<Int> const &, ROTableVector<Int> const &) 
     template Bool anyNE(ROTableVector<Double> const &, ROTableVector<Double> const &) 
     template Bool anyNE(ROTableVector<Float> const &, ROTableVector<Float> const &) 
     template Bool anyNE(ROTableVector<Int> const &, ROTableVector<Int> const &) 
     template void operator*=(TableVector<Int> &, Int const &) 
     template TableVector<Int> operator+(ROTableVector<Int> const &, Int const &) 
     template TableVector<Int> operator+(ROTableVector<Int> const &, ROTableVector<Int> const &) 
     template void operator+=(TableVector<Int> &, ROTableVector<Int> const &) 
     template Bool tabVecReptvEQ(TabVecRep<Double> const &, TabVecRep<Double> const &) 
     template Bool tabVecReptvEQ(TabVecRep<Float> const &, TabVecRep<Float> const &) 
     template Bool tabVecReptvEQ(TabVecRep<Int> const &, TabVecRep<Int> const &) 
     template Bool tabVecReptvNE(TabVecRep<Int> const &, TabVecRep<Int> const &) 
     template TabVecRep<Int> & tabVecReptvadd(TabVecRep<Int> const &, TabVecRep<Int> const &) 
     template void tabVecReptvassadd(TabVecRep<Int> &, TabVecRep<Int> const &) 
     template void tabVecRepvalasstim(TabVecRep<Int> &, Int const &) 
     template TabVecRep<Int> & tabVecRepvalradd(TabVecRep<Int> const &, Int const &) 
1000 aips/Tables/TableVector.cc aips/Tables/TVec.cc 
     = aips/Tables/TVecScaCol.cc aips/Tables/TVecTemp.cc 
     template class ROTableVector<Float> 
     template class TableVector<Float> 
     template class TabVecRep<Float> 
     template class TabVecScaCol<Float> 
     template class TabVecTemp<Float> 
1000 aips/Tables/VirtArrCol.cc aips/Tables/VirtScaCol.cc 
     template class VirtualArrayColumn<Double> 
     template class VirtualScalarColumn<Double> 
1000 aips/Tables/test/dVSCEngine.h aips/Arrays/Array.cc 
     = aips/Arrays/MaskedArray.cc 
     = aips/Arrays/Vector.cc 
     = aips/Containers/Block.h aips/Tables/ScaColData.cc 
     = aips/Tables/ScaColDesc.cc aips/Tables/ScalarColumn.cc 
     = aips/Tables/VSCEngine.cc aips/Tables/VirtScaCol.cc 
     = aips/Utilities/Compare.cc aips/Utilities/Copy.cc 
     = aips/Utilities/CountedPtr.cc aips/Utilities/ValTypeId.h 
     template class Array<VSCExample> 
     template class MaskedArray<VSCExample> 
     template class Vector<VSCExample> 
     template class Block<VSCExample> 
     template class ScalarColumnData<VSCExample> 
     template class ScalarColumnDesc<VSCExample> 
     template class ROScalarColumn<VSCExample> 
     template class ScalarColumn<VSCExample> 
     template class VSCEngine<VSCExample> 
     template class VirtualScalarColumn<VSCExample> 
     template class ObjCompare<VSCExample> 
     template void objcopy(VSCExample *, VSCExample const *, uInt) 
     template void objcopy(VSCExample *, VSCExample const *, uInt, uInt, uInt) 
     template void objset(VSCExample *, VSCExample, uInt) 
     template void objset(VSCExample *, VSCExample, uInt, uInt) 
     template void objmove(VSCExample *, VSCExample const *, uInt) 
     template class CountedConstPtr<Block<VSCExample> > 
     template class CountedPtr<Block<VSCExample> > 
     template class PtrRep<Block<VSCExample> > 
     template class SimpleCountedConstPtr<Block<VSCExample> > 
     template class SimpleCountedPtr<Block<VSCExample> > 
     template String valDataTypeId(VSCExample const *) 
1000 aips/Tables/test/tTableDesc.h aips/Arrays/Array.cc 
     = aips/Arrays/ArrayIter.cc 
     = aips/Arrays/MaskedArray.cc aips/Arrays/Vector.cc 
     = aips/Containers/Block.h 
     = aips/Tables/ArrColData.cc aips/Tables/ArrColDesc.cc 
     = aips/Tables/ScaColData.cc aips/Tables/ScaColDesc.cc 
     = aips/Utilities/Compare.cc aips/Utilities/Copy.cc 
     = aips/Utilities/CountedPtr.cc aips/Utilities/ValTypeId.h 
     template class Array<ExampleDesc> 
     template class ArrayIterator<ExampleDesc> 
     template class ReadOnlyArrayIterator<ExampleDesc> 
     template class MaskedArray<ExampleDesc> 
     template class Vector<ExampleDesc> 
     template class Block<ExampleDesc> 
     template class ArrayColumnData<ExampleDesc> 
     template class ArrayColumnDesc<ExampleDesc> 
     template class ScalarColumnData<ExampleDesc> 
     template class ScalarColumnDesc<ExampleDesc> 
     template class ObjCompare<ExampleDesc> 
     template void objcopy(ExampleDesc *, ExampleDesc const *, uInt) 
     template void objcopy(ExampleDesc *, ExampleDesc const *, uInt, uInt, uInt) 
     template void objset(ExampleDesc *, ExampleDesc, uInt) 
     template void objset(ExampleDesc *, ExampleDesc, uInt, uInt) 
     template void objmove(ExampleDesc *, ExampleDesc const *, uInt) 
     template class CountedConstPtr<Block<ExampleDesc> > 
     template class CountedPtr<Block<ExampleDesc> > 
     template class PtrRep<Block<ExampleDesc> > 
     template class SimpleCountedConstPtr<Block<ExampleDesc> > 
     template class SimpleCountedPtr<Block<ExampleDesc> > 
     template String valDataTypeId(ExampleDesc const *) 
1000 aips/Utilities/Assert.cc aips/Tables/DataManError.h 
     template class assert_<DataManError> 
1000 aips/Utilities/GenSort.cc aips/Arrays/Vector.h 
     = aips/Containers/Block.h 
     template uInt genSort(Vector<uInt> &, Block<uInt> const &) 
##### Needed for tExprNode
1000 trial/Tables/ScaledComplexData.cc 
     = aips/Tables/BaseMappedArrayEngine.cc 
     = aips/Tables/VirtArrCol.cc 
     = aips/BasicSL/Complex.h 
     template class BaseMappedArrayEngine<DComplex, Int> 
     template class BaseMappedArrayEngine<Complex, Short> 
     template class ScaledComplexData<DComplex, Int> 
     template class ScaledComplexData<Complex, Short> 
     template class VirtualArrayColumn<DComplex> 
