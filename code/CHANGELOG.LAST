
change id: 162
 author:   Ger van Diepen
 date:     2004/12/23
 avers:    1.9
 area:     Library
 package:  casa
 module:   Arrays
 type:     Code
 category: New
 summary:  Added arbitrary axes to ArrayIterator classes
ArrayIterator (and its derived classes VectorIterator and MatrixIterator) have been extended with the ability to iterate over any combination of axes.
For example, in VectorIterator the cursor axis can now be axis 2. Before it could only be axis 0.

change id: 0163
 author:   Wim Brouw
 date:     2005/02/02
 avers:    1.9
 area:     Library
 package:  scimath
 module:   Functionals
 type:     Code
 category: New
 summary:  Added cross-cloning
To ease the use of Functionals in the Fitting module, I have added cloneAD() and cloneNonAD() methods to all Functionals usable for fitting.

If you have e.g. a 
Gaussian1D<Double> gd1;
functional with some parameters set, the following can be done:

Gaussian1D<AutoDiff<Double> > *gd1ad = gd1.cloneAD();
or
Function<AutoDiff<Double> > *funad = gd1.cloneAD();

In essence the following table holds:

Method		In	Out	In	Out
clone()		T	T	AD<T>	AD<T>
cloneAD()	T	AD<T>	AD<T>	AD<T>
cloneNonAD()	T	T	AD<T>	<T>

See tGauusian1D for an example

change id: 0164
 author:   Wim Brouw
 date:     2005/02/15
 avers:    1.9
 area:     Library
 package:  scimath
 module:   Fitting
 type:     Code
 category: New
 summary:  Merge separate normal equations
Added merge() option to LSQFit (and derived classes) to merge separately created normal equations (e.g. on multi-processor machines)

change id: 0165
 author:   Ger van Diepen
 date:     2005/02/16
 avers:    1.9
 area:     Library
 package:  tables
 module:   Tables
 type:     Code
 category: New
 summary:  Added a virtual column engine for a TaQL expression
The virtual column engine VirtualTaQLColumn has been added to the Table System. It makes it possible to have a virtual column based on a TaQL CALC expression. The column can be a scalar or an array and can have any standard data type.
For example:
   tab.addColumn (ScalarColumnDesc<double>("MeanArrayCol"),
                  VirtualTaQLColumn("mean(ArrayCol)"));

As can be seen in the example the TaQL expression is passed to the constructor as a string. The expression can be as complex as one likes.
Care has to be taken not to delete a column used in such an expression. The system is not robust enough (yet) to cope with that.

change id: 0166
 author:   Ger van Diepen
 date:     2005/04/04
 avers:    1.9
 area:     Library
 package:  casa
 module:   Arrays
 type:     Code
 category: New
 summary:  Vector accepts Array with > 1 dimensions
The Vector constructor taking an Array has been changed such that now it accepts an Array with more than one dimensions as long as at most one dimensions has a length > 1. In this way one can easily make a Vector from a 1-dim slice of an Array without having to use the reform function.

Furthermore the reference function has been changed to accept a const Array
object. It makes it possible to use a temporary Array object (e.g. a slice) directly instead of having to create an intermediate Array object. Several Array examples already contained this until now incorrect behaviour.

Finally The Matrix and Cube constructor accepting an Array can now correctly handle a 0-dim Array.

change id: 0167
 author:   Ger van Diepen
 date:     2005/04/19
 avers:    1.9
 area:     Library
 package:  tables
 module:   Tables
 type:     Code
 category: New
 summary:  Added cone searching to TaQL
TaQL got an operator INCONE and a few new functions to make it possible to find sources contained in a cone.
It is possible to do catalogue matching using these new functions.
