
change id: 0147
 author:   Raymond Rusk
 date:     2003/04/14
 avers:    1.8
 area:     Library
 package:  trial
 module:   MeasurementComponents
 type:     Test
 category: Other
 summary:  Performance profile of the IRAM solvers (g, b) Jones
Source files in MeasurementComponents and CalTables were compiled
and linked with the "-pg" option of g++.  The "calibrater" server
containing this code was executed on simulated ALMA data and the
resulting profile files were analyzed with gprof to locate code
needing optimizations.  The results were given to Kumar for further
action.

change id: 0148
 author:   Raymond Rusk
 date:     2003/04/14
 avers:    1.8
 area:     Library
 package:  alma
 module:   MeasurementSets
 type:     Code Test
 category: New
 summary:  Performance profiling of AlmaTI2MS, almati2ms and almatifiller.
Test program tAlmaTI2MS.cc written.  "gprof"
profiling of AlmaTI2MS and the glish client
almati2ms done.  IRAM data (g067) from
07-feb-1997* used to profile almatifiller.

change id: 0149
 author:   Raymond Rusk
 date:     2003/04/14
 avers:    1.8
 area:     Library
 package:  alma
 module:   MeasurementSets
 type:     Test
 category: Other
 summary:  Identify and implement optimizations for almati2ms
No call to a AlmaTI2MS class method accounted for more
than 1% of the CPU time; optimization by small tweaks
to AlmaTI2MS.cc not possible.  The code appears to be
IO- rather than CPU-bound.

change id: 0150
 author:   Raymond Rusk
 date:     2003/04/14
 avers:    1.8
 area:     System
 package:  trial
 module:   benchmark.g
 type:     Code
 category: New
 summary:  Add almati2ms to the AIPS++ benchmarks in benchmark.g
Added public methods almafuvrd(), almatifuvrd() and private
method loadalmauvfits() to benchmark.g.  Updated documentation
in benchmark.help.

change id: 0151
 author:   Raymond Rusk
 date:     2003/04/14
 avers:    1.8
 area:     Library
 package:  trial
 module:   MeasurementEquations
 type:     Code Test
 category: New
 summary:  Performance profiling of AIPS++ simulator
Tim Cornwell requested profiling be done on his script sim.g.
Added test programs tSimulator.cc and tSimulatorEND.cc
for profiling DOsimulator.cc.  Found most of the time
spent in FORTRAN fft routines.  Some parts of sim.g had
no C++ counterpart.  Overall glish and C++ timings found
to be very similar since compute-intensive parts are done
in C++.
