1000 aips/Arrays/ArrayMath.cc aips/Quanta/Quantum.h 
     template Array<Quantum<Double> > operator*(Quantum<Double> const &, Array<Quantum<Double> > const &) 
     template Array<Quantum<Double> > operator-(Array<Quantum<Double> > const &) 
     template void operator*=(Array<Quantum<Double> > &, Array<Quantum<Double> > const &) 
1000 aips/Quanta/QLogical.cc aips/Arrays/Vector.h 
     template Bool operator==(Quantum<Vector<Double> > const &, Quantum<Vector<Double> > const &) 
     template Bool operator==(Quantum<Vector<Double> > const &, Vector<Double> const &) 
1000 aips/Quanta/QMath.cc aips/Arrays/Vector.h 
     = aips/BasicSL/Complex.h 
     template Quantum<Vector<Double> > operator*(Vector<Double> const &, Quantum<Vector<Double> > const &) 
     template Quantum<Complex> operator*(Complex const &, Quantum<Complex> const &) 
     template Quantum<Complex> ceil(Quantum<Complex> const &) 
     template Quantum<Complex> floor(Quantum<Complex> const &) 
     template Quantum<Complex> abs(Quantum<Complex> const &) 
