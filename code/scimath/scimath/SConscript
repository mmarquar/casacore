import os, glob
import SCons.Defaults

# import root environment
Import( ["buildenv", "installer"])
myenv = buildenv.Copy()
# get all the sourcefiles recursively
lls = myenv.SGlob("*.ll", recursive=True )
for f in lls:
    lenv = myenv.Copy(CXXFILESUFFIX=".lcc")
    ff = lenv.CXXFile(File(f))
    # hack to point include path to the builddir relative directory
    # where the lex/yacc file was found
    path = os.path.split(str(ff[0]))[0]
    myenv.AppendUnique(CPPPATH=[Dir(path)])

yys = myenv.SGlob("*.yy", recursive=True )
for f in yys:
    yenv = myenv.Copy(CXXFILESUFFIX=".ycc")
    ff = yenv.CXXFile(File(f))
    # hack to point include path to the builddir relative directory
    # where the lex/yacc file was found
    path = os.path.split(str(ff[0]))[0]
    myenv.AppendUnique(CPPPATH=[Dir(path)])


# get all the sourcefiles recursively
cpps = myenv.SGlob("*.cc", excludedirs=["test"], recursive=True )
# need this to go to the root dir, as SConsript asumes to be in the
# build dir
rootdir=myenv.Dir("#").abspath
libname= "casa_" + myenv["PACKAGE"]

if "static" in myenv["libtype"]:
    # build static lib
    slib =  myenv.StaticLibrary(target = libname, source = [cpps])
    installer.AddLibrary(slib)
if "shared" in myenv["libtype"]:
    #build dynamic lib
    shenv=myenv.Copy()
    shenv.Append(LIBPATH=[Dir("#/fortran")])
    shenv.Prepend(LIBS=["casa_scimath_f"])
    dlib =  shenv.SharedLibrary(target = libname, source = cpps)
    installer.AddLibrary(dlib)

if myenv["tests"]:
    testenv = myenv.Clone()
    # AddCasaTests()  move the code belowto tools/casa.py
    # gather test files
    # SGlob works in build dir, so only for cc files
    tests = testenv.SGlob("test/*.cc")
    tests += testenv.SGlob("*/test/*.cc")
    # point to tests local includes
    # use static lib to link here
    testenv.Append(LIBPATH=[Dir("#/fortran")])
    testenv.Prepend(LIBS=["casa_scimath_f"])
    statlib = File(slib[0])
    testenv.Prepend(LIBS=[statlib])

    for i in tests:
	# get the basename no suffix of the file
	tinfile = os.path.splitext(os.path.basename(i))[0]
	# out put gos into the root/test directory
	toutfile = os.path.join("#","tests", tinfile)
	tapp = testenv.Program(toutfile,source=i)
    # install assay *.run *.in* *.out files into test directory
    # use glob here with an absolute path, as Sconsript is "called" 
    # from the build dir.
    testaux = glob.glob("%s/%s/test/*.*" % (rootdir, testenv["PACKAGE"]))
    testaux += glob.glob("%s/%s/*/test/*.*" % (rootdir, testenv["PACKAGE"]))
    # exclude cc files
    testaux = [ i for i in testaux if not i.endswith('.cc') ]
    testaux = [ i for i in testaux if not i.endswith('.h') ]
    for i in testaux:
	# Copy doesn't overwrite, so check if they already exist 
	# from a previous run.
	tdir = Dir("#/tests").abspath
	if not os.path.exists(tdir):
	    testenv.Execute(Mkdir(tdir))
	outfile = os.path.join(tdir, os.path.basename(i))
	if not os.path.exists(outfile):
	    testenv.Execute(Copy(outfile, i))
    # run assay here ....
    #
    #

# install headers, only works with absolute dir.
installer.AddHeaders( rootdir, "*.h", "casacore", True )
installer.AddHeaders( rootdir, "*.tcc", "casacore", True )
